q
cookie
q
c
matched_params.captures
matched_params.names
matched_params 
q
y
q
@controller_class.new
@controller_class
q
self.send(:new)
name
self.send(name)
self
q
action_name
q
controller_instance.index
controller_instance
controller_instance.invoke_action(action_name)
controller_instance
n
s
ControllerBase.new(req, res)
q
qy
req.path
@pattern
matched_params.names
matched_params
route_params
q
ControllerBase.new(req, res, route_params)
controller_instance
ControllerBase.new
controller_instance
action_name
q
req.input
req
q
res.params
req.params
req.path
q
req.path
@action_name
@controller_class
@http_method
req.params
res
req
@pattern
q
render(name)
self.send(name)
name
q
http_method.to_s.upcase
http_method.to_s
http_method
q
controller_instance.invoke_action({})
controller_instance.invoke_action
controller_instance
c
req.request_method.downcase.to_sym
q
req.request_method
@http_method.downcase.to_sym
q
req.path
@pattern
req
req['Location']
@pattern
@http_method == req.request_method
@http_method
req.request_method
q
@pattern 
req
@pattern
c
n
req
@pattern
q
req.cookies
req
req.cookies
req
c
q
cats_controller
cats_controller.session
q
exit
n
session
c
req.cookies
req
c
display cookie
c
req.cookies["_rails_lite_app"]
req.cookies
req
q
cookie_val
cookie
q
File.read(templeate_fname)
templeate_fname
templeate_name
q
require 'active_support'
require 'active_support/inflector'
require 'active_supporte/inflector'
underscore
require 'inflector'
require 'active_support/inflector'
self.class.underscore
self.class
self
